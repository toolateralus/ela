

main :: (string[] argv) -> i32 {
	f32 deref;	
	f32 xaryus_brother = 0.1 * deref;
	for i32 i; i < 10; i = i + 1 {
		return 0;
	}
	
	i32[] arr;
	for v; arr {
		return 0;
	}
	
	// while {
	// 	continue;
	// }
	
	// s32 v = 1;
	
	// while v {
	// 	continue;
	// }

}

test_if_1 :: () {
	i32 v = 1;
	if v {
		return 1;
	}
	return 0;
}

test_if_2 :: () {
	i32 v = 1;
	if v {
		return 1;
	} else {
		return 0;
	}
}

test_if_3 :: () {
	i32 v = 1;
	if !v {
		return 0;
	} else if v {
		return 1;
	} else {
		return 0;
	}
}

test_if :: () {
	test_if_1();
	test_if_2();
	test_if_3();
}


// FIRST TASK // TODO: Control flow. Break, Return, Continue, If, For, While
// SECOND // TODO: [2] Better typing. explicit type conversions, implicit type conversions, 


// Thursday
// TODO: [0] Dot expressions, call expressions,  postfix expressions. dont use -> to dereference.

// TODO(cont.) better typing in expressions  (||, != return bool) etc.

// If we get time.
// TODO: [3] # directives, and the ability to define custom ones that just run routines.
// TODO: [4] ffi with C. #extern or #foreign or something for declarations, linking against libc.

// Friday
// TODO: [0] First class types. make(int*) etc.
// TODO: [1] Function pointers, first class functions.
// TODO: [2] Compile time reflection

// Monday
// TODO: [0] Struct Declarations
// TODO: [1] Method declarations

// Tuesday
// TODO: [0] Operator Overloads. (do we even want this? could be helpful)
// TODO: [1] Constructor/Destructor.
// object :: struct {
// 	#constructor :: (object *self) {
		
// 	}
// 	#destructor :: (object *self) {
		
// 	}
// }

// Unforseen future.
// TODO: [1] in-language build system. library with build related functions
// TODO: [2] in-language testing system. 'ela test' type ish. #test attributes
// TODO: [3] compile time programs. use consteval and constexpr to try to get as far as possible without bytecode runtime.



