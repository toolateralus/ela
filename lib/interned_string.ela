#import core;

#static __interned_string_storage_cache: string[s64];

InternedString :: struct {
  id: s64;

  #ctor :: () {
    id = 0;
  }

  #ctor :: (value: string) {
    #static cache: s64[string];
    #static next_id: s64 = 1;
    _id := cache[value];
    if _id == 0 {
      id = next_id++;
      cache[value] = id;
      __interned_string_storage_cache[id] = value;
    }
    else { id = _id; }
  }

  value :: () -> string {
    return __interned_string_storage_cache[id];
  }

  #operator(==) :: (other: InternedString) -> bool {
    return other.id == id;
  }
}