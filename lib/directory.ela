#import core;

#export DIR :: struct;

dirent :: struct {
  d_ino: u64;
  d_off: u64;
  d_reclen: u16;
  d_type: u8;
  d_name: char[256];
}

#foreign opendir :: fn(name: char *) -> DIR*;
#foreign readdir :: fn(dir: DIR*) -> dirent*;
#foreign closedir :: fn(dir: void*) -> int;

Directory :: struct {
  path: string;
  files: string[];
  #static open :: fn(path: string) -> Directory {
    dir := opendir(path.data);
    if !dir then return {path, string[]{}};
    files: string[];
    entry: void*;
    while entry = readdir(dir) {
      ent : dirent* = entry;
      files ~= {(c_string)ent.d_name};
    }
    closedir(dir);
    return {path, files};
  }
}