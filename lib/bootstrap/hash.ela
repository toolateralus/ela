#region NUMBER TYPES {
  impl Hash for s8 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for s16 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for s32 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for s64 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for u8 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for u16 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for u32 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }

  impl Hash for u64 {
    hash :: fn(self) -> u64 {
      hash := 0xCBF29CE484222325;
      hash ^= self;
      hash *= 0x100000001B3;
      return hash;
    }
  }
}
