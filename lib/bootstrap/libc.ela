// Obviously LIBC is only available when not in a freestanding environment.
#ifndef FREESTANDING {
  #foreign system :: fn(cmd: c_string) -> s32;

  #foreign free :: fn(ptr: void*) -> void;
  #foreign malloc :: fn(nbytes: u64) -> void*;
  #foreign calloc :: fn(num: u64, size: u64) -> void*;
  #foreign realloc :: fn(ptr: void*, size: u64) -> void*;

  #foreign memcpy :: fn(dest: void*, src: void*, n: u64) -> void*;
  #foreign memset :: fn(dest: void*, c: s32, n: u64) -> void*;
  #foreign memmove :: fn(dest: void*, src: void*, nbytes: s64) -> s32;

  #foreign printf :: fn(format: c_string, ...) -> s32;
  #foreign exit :: fn(code: s32);

  #foreign scanf :: fn(format: c_string, ...) -> s32;
  #foreign getchar :: fn() -> s32;

  #foreign sleep :: fn(seconds: s32);
  #foreign usleep :: fn(c: s32);

  #foreign strdup :: fn(str: c_string) -> c_string;
  #foreign strndup :: fn(str: c_string, n: u64) -> c_string;
  #foreign strerror :: fn(errnum: s32) -> c_string;
  #foreign strtol :: fn(str: c_string, endptr: c_string**, base: s32) -> s64;
  #foreign strtoul :: fn(str: c_string, endptr: c_string**, base: s32) -> u64;
  #foreign strtod :: fn(str: c_string, endptr: c_string**) -> f64;
  #foreign strtok :: fn(str: c_string, delim: c_string) -> c_string;
  #foreign strchr :: fn(str: c_string, c: s32) -> c_string;
  #foreign strrchr :: fn(str: c_string, c: s32) -> c_string;
  #foreign strstr :: fn(haystack: c_string, needle: c_string) -> c_string;
  #foreign strlen :: fn(str: c_string) -> s32;
  #foreign strcmp :: fn(str1: c_string, str2: c_string) -> s32;
  #foreign strcat :: fn(dest: c_string, src: c_string) -> c_string;
  #foreign strncat :: fn(dest: c_string, src: c_string, n: u64) -> c_string;
  #foreign snprintf :: fn(buffer: u8*, buffer_size: u64, format: c_string, ...) -> s32;
  #foreign sprintf :: fn(buffer: u8*, format: c_string, ...) -> s32;
  #foreign strncmp :: fn(str: c_string, str2: c_string, len: s32) -> s32;

  #foreign isalnum :: fn(c: s32) -> s32;
  #foreign isalpha :: fn(c: s32) -> s32;
  #foreign isspace :: fn(c: s32) -> s32;
  #foreign isdigit :: fn(c: s32) -> s32;
  #foreign islower :: fn(c: s32) -> s32;
  #foreign isupper :: fn(c: s32) -> s32;
  #foreign isprint :: fn(c: s32) -> s32;
  #foreign ispunct :: fn(c: s32) -> s32;

  #foreign atoi :: fn(v: c_string) -> s32;
  #foreign atof :: fn(v: c_string) -> f64;
}