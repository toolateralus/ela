// Obviously LIBC is only available when not in a freestanding environment.
#ifndef FREESTANDING {
  #foreign system :: fn(cmd: u8*) -> s32;

  #foreign free :: fn(ptr: void*) -> void;
  #foreign malloc :: fn(nbytes: u64) -> void*;
  #foreign calloc :: fn(num: u64, size: u64) -> void*;
  #foreign realloc :: fn(ptr: void*, size: u64) -> void*;

  #foreign memcpy :: fn(dest: void*, src: void*, n: u64) -> void*;
  #foreign memset :: fn(dest: void*, c: s32, n: u64) -> void*;
  #foreign memmove :: fn(dest: void*, src: void*, nbytes: s64) -> s32;

  #foreign printf :: fn(format: u8*, ...) -> s32;
  #foreign exit :: fn(code: s32);

  #foreign scanf :: fn(format: u8*, ...) -> s32;
  #foreign getchar :: fn() -> s32;

  #foreign sleep :: fn(seconds: s32);
  #foreign usleep :: fn(c: s32);

  #foreign strdup :: fn(s: u8*) -> u8*;
  #foreign strndup :: fn(s: u8*, n: u64) -> u8*;
  #foreign strerror :: fn(errnum: s32) -> u8*;
  #foreign strtol :: fn(s: u8*, endptr: u8***, base: s32) -> s64;
  #foreign strtoul :: fn(s: u8*, endptr: u8***, base: s32) -> u64;
  #foreign strtod :: fn(s: u8*, endptr: u8***) -> f64;
  #foreign strtok :: fn(s: u8*, delim: u8*) -> u8*;
  #foreign strchr :: fn(s: u8*, c: s32) -> u8*;
  #foreign strrchr :: fn(s: u8*, c: s32) -> u8*;
  #foreign strstr :: fn(haystack: u8*, needle: u8*) -> u8*;
  #foreign strlen :: fn(s: u8*) -> s32;
  #foreign strcmp :: fn(str1: u8*, str2: u8*) -> s32;
  #foreign strcat :: fn(dest: u8*, src: u8*) -> u8*;
  #foreign strncat :: fn(dest: u8*, src: u8*, n: u64) -> u8*;
  #foreign snprintf :: fn(buffer: u8*, buffer_size: u64, format: u8*, ...) -> s32;
  #foreign sprintf :: fn(buffer: u8*, format: u8*, ...) -> s32;
  #foreign strncmp :: fn(s: u8*, str2: u8*, len: s32) -> s32;

  #foreign isalnum :: fn(c: s32) -> s32;
  #foreign isalpha :: fn(c: s32) -> s32;
  #foreign isspace :: fn(c: s32) -> s32;
  #foreign isdigit :: fn(c: s32) -> s32;
  #foreign islower :: fn(c: s32) -> s32;
  #foreign isupper :: fn(c: s32) -> s32;
  #foreign isprint :: fn(c: s32) -> s32;
  #foreign ispunct :: fn(c: s32) -> s32;

  #foreign atoi :: fn(v: u8*) -> s32;
  #foreign atof :: fn(v: u8*) -> f64;
}