import assertion::*;

#test fn test_type_alias() {
  type XaryuBarSchnar :: s32;
  i: XaryuBarSchnar = 0;
  assert(i == 0, "type keyword failed");
}

#test fn test_ptr_alias() {
  type int_ptr :: *mut s32;
  p: *mut s32 = std::c::malloc(sizeof(s32));
  other: int_ptr  = p;
  assert(p == other, "type failed to equal pointed to type field.");
  std::c::free(p);
}

fn Funky() -> s32 {
  return 102;
}

#test fn test_fn_alias() {
  type func :: fn () -> s32;
  f: func = &mut Funky;
  assert(f() == 102, "funky function pointer failed");
}