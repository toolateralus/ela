
#test fn test_type_alias() {
  type XaryuBarSchnar :: s32;
  i: XaryuBarSchnar = 0;
  assert("_type type failed", i == 0);
}

#test fn test_ptr_alias() {
  type int_ptr :: *mut s32;
  p: *mut s32 = std::c::malloc(sizeof(s32));
  other: int_ptr  = p;
  assert("type failed to equal pointed to _type field.", p == other);
  std::c::free(p);
}

fn Funky() -> s32 {
  return 102;
}

#test fn test_fn_alias() {
  type func :: fn () -> s32;
  f: func = &mut Funky;
  assert("function pointer failed", f() == 102);
}