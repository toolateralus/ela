;

#test fn test_initializer_lists() {
  scalar: s32;
  fixed: [s32; 3] = .[0, 1, 2];
}

struct XarBarInitListTestStruct {
  x: f32,
  y: f32,
}

fn New(v: XarBarInitListTestStruct) -> XarBarInitListTestStruct {
  return v;
}

#test fn test_init_list_as_implicit_parameter() {
  v := New(.{x: 0.0, y: 0.0});
  v1 := New(XarBarInitListTestStruct.{x: 0.0, y: 0.0});
  assert("failed", v.x == 0.0 && v.y == 0.0);
  assert("failed", v1.x == 0.0 && v1.y == 0.0);
}

struct InitListTest {
  n : s32
}

struct InitListStruct {
  a: s32,
  b: s32,
  c: s32,
}

fn returns_an_init_list() -> InitListTest {
  return .{n: 0};
}

fn infers_argument_from_init_list(t: InitListTest) -> InitListTest {
  return t;
}

#test fn test_init_list_comprehensive() {
  assert("Init list failed to return from function", returns_an_init_list().n == 0);
  assert("Init list failed to infer from parameter signature", infers_argument_from_init_list(InitListTest.{n: 0}).n == 0);
  empty_init_list := InitListTest.{};
}