
Vec2 :: struct {
  x: float;
  y: float;
}

Add :: interface![Left, Right, Result] {
  add :: fn(left: Left, right: Right) -> Result;
}

impl Add![Vec2, Vec2, Vec2] for Vec2 {
  add :: fn(left: Vec2, right: Vec2) -> #self {
    return {
      x: left.x + right.x,
      y: left.y + right.y
    };
  }
}

impl Vec2 {
  to_string :: fn(self*) -> string {
    return $"x: {self.x}, y: {self.y}";
  }
}

#import core;

#test test_main :: fn() {
  a, b := (Vec2{x: 1, y: 1}, Vec2{x: 1, y: 1});
  
  result := a + b;
  assert("+ failed"c,  result.x == 2 && result.y == 2);

}