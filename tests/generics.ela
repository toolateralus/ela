#import core;

add_generic :: fn![T](a: T, b: T) -> T {
  return a + b;
}

generic_return :: fn![T]() -> T {
  t: T;
  return t;
}

#test test_generic_add :: fn() {
  assert("generic_add_float failed"c, add_generic![float](100.0, 100.0) == 200.0);
  assert("generic_add_int failed"c, add_generic![int](5, 6) == 11);
  assert("generic_return failed"c, generic_return![int]() == 0)
  assert("generic_return failed"c, generic_return![float]() == 0.0);
}