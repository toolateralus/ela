/* In ela, an enum is just a set of named constants. You can't currently refer to the type outside of accessing one of its members */
MyEnum :: enum {
  Zero,
  One,
  Two
}

/* 
  By default, enums with no values provided will just be incremented integers. For flags, you can use #flags before the declaration, to get
  `1 << iota` for each variant provided.
*/
#flags Flags :: enum {
  One,                // implicitly 1 << 0,
  Two,                // implicitly 1 << 1,
  Three               // implicitly 1 << 2,
}


main :: fn() {
  n: MyEnum;
  n = 10; // at the time of writing this, this is legal. To be changed.
  n = MyEnum::Zero;

  f: Flags;
  f |= Flags::One | Flags::Three;
}