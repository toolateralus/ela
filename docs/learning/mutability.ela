


/* 
  All variables, parameters, and pointers have a mutability semantic in Ela.
  see 'learning/pointers.ela' to learn about pointers.

  here we will cover variables and parameters.
*/

main :: fn() {
  // const, immutable.
  x := 0;
  // mutable.
  mut x1 := 10;
}

// x can be mutated within the function, but wont be reflected at the call site,
// since it's not taken by pointer.
some_function :: fn(mut x: s32) {
  x += 10;
}

// const is always default.
some_const_param :: fn(x: s32) {

}