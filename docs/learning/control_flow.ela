/* If statements */

if true {
  ...
} else {
  ...
}

if false {
  ...
} else if true {
  ...
} else {
  ...
}


/* 
  A single if statement that only has one statement as a body and no else can be shorthanded as 
*/
if true then println("Hi!");


/* While loop */

while true {
  if 0 then break;
  if 1 then continue;
}


/* For loops:  */

// C equivalent:  for (int i = 0; i < 100; ++i) {}
for i in 0..100 {}

// you can use any expression on the left or right of the range.
for i in 0..get_max() {}

// another example.
for _ in get_min()..get_max() + 100 {}

// C equivalent: for (int i = 100; i >= 0; --i) {}
for i in 100..0 {}

// To control the increment in a range, you can use Range's initializer list.

// C equivalent: for (int i = 0; i < 100; i += 2) {}
for i in Range{0, 100, 2} {}

// C equivalent: for (int i = 100; i >= 0; i -= 4) {}
for i in Range{100, 0, 4} {}


/* To iterate over a collection, such as an array, you can use: */
array : #make(s32[], 100); // make a 100 long, zero initialized array.

// iterate and get copies of elements.
for v in array {
  println($"{v}");
}

/* To avoid copies, or to mutate elements, you can use this syntax to take a pointer to the element you're getting from the iterator */
for *v in array {
  println($"{*v}");
}

