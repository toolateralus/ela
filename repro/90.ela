impl![T] List![T] {
  order_by :: fn(self, predicate: fn* (T*, T*) -> bool) -> List![T] {
    new_list := self.clone();
    for i in 0..new_list.length {
      for j in (i+1)..new_list.length {
        if predicate(&new_list.data[i], &new_list.data[j]) {
          temp := new_list.data[i];
          new_list.data[i] = new_list[j];
          new_list.data[j] = temp;
        }
      }
    }
    return new_list;
  }
}

main :: fn() { 
  type := typeof(List![s32]);
  ordered_fields := type.fields.order_by(fn(a: Field*, b) -> bool {
    return a.offset < b.offset;
  });
}
