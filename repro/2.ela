#import core;

/* 
  * we need to make the overload system and the generic function call system use the same machinery
  * otherwise the overloaded functions will always take precedence over generic procedures.
*/

add :: ($T a, b) -> $T {
  return a + b;
}

add :: (int a, b) -> int {
  return a;
}

main :: ()  {
  // This ends up calling the generic function, not the other overload, which it should call the overload because the types
  // match exactly.
  i := add(1, 2);
  if i != 1 {
    printf("\e[33m error, i != 1, got %d\n", i);
  }
  
  // of course this calls the generic function.
  f := add(1.0, 12.0);
  if f != 13.0 {
    printf("\e[33m error, f != 13, got %f\n", f);
  }
  
}