struct Struct {
  fd: s32
}

extern fn read(fd: s32, buffer: *const void, len: s32) -> s32;

// This works because the CT interpreter doesn't care about _type checking,
// it just evaluates the expression and infers the _type.
buffer: u8[CONSTANT]; 

impl Struct {
  fn read_from(*mut self) {
    // This doesn't work, because the arguments depend on a resolved _type to check,
    // of course, and since we use-before-declare, we don't know the _type and it says the _type is -1.
    read(self.fd, null, CONSTANT); 
  }
}

const CONSTANT := 45;

fn main() {}
