//!FEATURE


/* 
  We don't actually have to have 'generic specialization' for this to occur:
  we just need to store impl's on scopes, instead of dumping all the symbols into
  the type's scope. Then, we can do a lookup and find a suitable function to call
  from all the impls/interfaces provided.

  this, of course, is a form of specialization.
  but not in the same context as C++'s template specialization.
*/

impl From!<bool> for s32 {
  fn from(n : bool) -> s32 {
    return n as s32;
  }
}

impl From!<s32> for s32 {
  fn from(n : s32) -> s32 {
    return n as s32;
  }
}

fn main() {
  n := s32::from(true);
  n := s32::from(5);
}