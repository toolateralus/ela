#import net;
#import core;

PORT : u16 = 8080

// Function designed for chat between client and server.
// sockfd: socket file descriptor.
chatting :: fn(sockfd: int) { 
  buffer : char[80];

  while true {
    memset(buffer, 0, 80);
    printf("Enter message : "c);

    n: int;
    while n < 80 && (buffer[n++] = getchar()) != '\n' {}
    
    write(sockfd, buffer, 80);

    memset(buffer, 0, 80);

    read(sockfd, buffer, 80);

    println($"From Server : {(char*)buffer}");

    if ((strncmp(buffer, "exit"c, 4)) == 0) {
      println("Client Exit...");
      break;
    }
  }
}

main :: fn() {
  sockfd : int = socket(AF_INET, SocketType::Stream, 0);
  if (sockfd == -1) {
    panic("socket creation failed...");
  } else {
    println("Socket successfully created..");
  }

  servaddr: sockaddr_in;
  servaddr.sin_family = AF_INET;
  servaddr.sin_addr.s_addr = inet_addr("127.0.0.1"c);
  servaddr.sin_port = htons(PORT);
  servaddr_ptr : sockaddr* = &servaddr;

  if connect(sockfd, servaddr_ptr, sizeof(servaddr)) != 0 {
    panic("connection with the server failed...");
  } else {
    println("connected to the server..");
  }

  chatting(sockfd);
  close(sockfd);
}