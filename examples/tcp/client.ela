#import net;
#import core;

MAX_BUFFER_LEN : int = 80
PORT : u16 = 8080

// Function designed for chat between client and server.
// sockfd: socket file descriptor.
chatting :: fn(sockfd: int) { 
  buffer: char[MAX_BUFFER_LEN];

  while true {
    memset(buffer, 0, MAX_BUFFER_LEN);
    println("Enter message : ");

    n: int;
    while n < MAX_BUFFER_LEN && (buffer[n++] = getchar()) != '\n' {}

    if (n >= 4 && (strncmp(buffer, "exit", 4)) == 0) {
      println("Client Exit...");
      break;
    }
    write(sockfd, buffer, MAX_BUFFER_LEN);
    memset(buffer, 0, MAX_BUFFER_LEN);
    read(sockfd, buffer, MAX_BUFFER_LEN);
    println($"From Server : {(char*)buffer}");
  }
}

main :: fn() {
  sockfd : int = socket(AF_INET, SocketType.Stream, 0);
  if (sockfd == -1) {
    panic("socket creation failed...");
  } else {
    println("Socket successfully created..");
  }

  servaddr: sockaddr_in;
  servaddr.sin_family = AF_INET;
  servaddr.sin_addr.s_addr = inet_addr("127.0.0.1");
  servaddr.sin_port = htons(PORT);
  
  if connect(sockfd, (sockaddr*)&servaddr, sizeof(servaddr)) != 0 {
    panic("connection with the server failed...");
  } else {
    println("connected to the server..");
  }

  chatting(sockfd);
  close(sockfd);
}