// declare or add to a module (rest of this file will be inside this)
#mod std::mem;

Allocator :: interface![T] {
  alloc :: fn![T]() -> T*;
}

// declare a function within std::mem;
alloc :: fn![T, Alloc = std::mem::default_allocator]() {
  Alloc::alloc![T]();
}

// declare or add to a module (the block's contents will be inside it.)
#mod std::mem {
  // declare a function within std::mem;
  alloc :: fn![T, Alloc = std::mem::default_allocator]() {
    return Alloc::alloc![T]();
  }
}

import {mem, math} from std;
import {alloc, free} from mem;
import {alloc, free} from std::mem;

